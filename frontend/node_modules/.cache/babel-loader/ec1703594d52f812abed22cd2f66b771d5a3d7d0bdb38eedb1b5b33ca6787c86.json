{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        if (!res.ok) {\n          setError(\"failed to fetch\");\n        }\n\n        // const contentType = res.headers.get(\"content-type\");\n        // if (!contentType || !contentType.includes(\"application/json\")) {\n        //   setError(\"Response is not in JSON format\");\n        //   setLoading(false);\n        //   return;\n        // }\n\n        const result = await res.json();\n        setData(result.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useFetch, \"v5inua6mCP5CN8A+E7ULWpnNGvM=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","loading","setLoading","error","setError","fetchData","res","fetch","ok","result","json","err","message"],"sources":["F:/RESUME PROJECT/tour-management/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = url => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n\r\n      try {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n         setError(\"failed to fetch\");\r\n         \r\n        }\r\n            \r\n        // const contentType = res.headers.get(\"content-type\");\r\n        // if (!contentType || !contentType.includes(\"application/json\")) {\r\n        //   setError(\"Response is not in JSON format\");\r\n        //   setLoading(false);\r\n        //   return;\r\n        // }\r\n\r\n\r\n\r\n        const result = await res.json();\r\n\r\n        \r\n        setData(result.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      } \r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { data, loading, error };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAGC,GAAG,IAAI;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,YAAY;MAC1BH,UAAU,CAAC,IAAI,CAAC;MAElB,IAAI;QACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;QAE5B,IAAI,CAACQ,GAAG,CAACE,EAAE,EAAE;UACZJ,QAAQ,CAAC,iBAAiB,CAAC;QAE5B;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAIA,MAAMK,MAAM,GAAG,MAAMH,GAAG,CAACI,IAAI,EAAE;QAG/BV,OAAO,CAACS,MAAM,CAACV,IAAI,CAAC;QACpBG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZP,QAAQ,CAACO,GAAG,CAACC,OAAO,CAAC;QACrBV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,EAAE;EACb,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACjC,CAAC;AAAC,GAzCIN,QAAQ;AA2Cd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}